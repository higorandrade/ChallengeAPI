// <auto-generated />
using System;
using ChallengeAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChallengeAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("ChallengeAPI.Models.Empregado", b =>
                {
                    b.Property<int>("Id_empregado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Primeiro_nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ultimo_nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id_empregado");

                    b.ToTable("Empregados");
                });

            modelBuilder.Entity("ChallengeAPI.Models.Projeto", b =>
                {
                    b.Property<int>("Id_projeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_criacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Data_termino")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_gerente")
                        .HasColumnType("int")
                        .HasColumnName("Gerente");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id_projeto");

                    b.HasIndex("Id_gerente");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("ChallengeAPI.Models.Usuario", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.HasKey("Username");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EmpregadoProjeto", b =>
                {
                    b.Property<int>("EmpregadosId_empregado")
                        .HasColumnType("int");

                    b.Property<int>("ProjetosId_projeto")
                        .HasColumnType("int");

                    b.HasKey("EmpregadosId_empregado", "ProjetosId_projeto");

                    b.HasIndex("ProjetosId_projeto");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("ChallengeAPI.Models.Projeto", b =>
                {
                    b.HasOne("ChallengeAPI.Models.Empregado", "Gerente")
                        .WithMany("ProjetosGerenciados")
                        .HasForeignKey("Id_gerente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gerente");
                });

            modelBuilder.Entity("EmpregadoProjeto", b =>
                {
                    b.HasOne("ChallengeAPI.Models.Empregado", null)
                        .WithMany()
                        .HasForeignKey("EmpregadosId_empregado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeAPI.Models.Projeto", null)
                        .WithMany()
                        .HasForeignKey("ProjetosId_projeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChallengeAPI.Models.Empregado", b =>
                {
                    b.Navigation("ProjetosGerenciados");
                });
#pragma warning restore 612, 618
        }
    }
}
